/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ccsu.networking.ui;

import edu.ccsu.networking.main.Client;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Ben and Khaled
 */
public class ClientMenu extends JFrame {
    // VARIABLES
    Client client = new Client(this);
    private String localFiles = ""; // # = COLS.... ? = ROWS

    public DefaultTableModel model;
    public DefaultTableModel modelS;
    
    public ClientMenu(String tarIP, String tarPort, String clientPort) {
        super("FUN FILE SHARE - USER");
        this.setVisible(true);
        System.out.println("INTERFACE - CLIENT MENU STARTED");
        //JOptionPane.showMessageDialog(null,"INTERFACE - CLIENT MENU STARTED","Started Client",JOptionPane.INFORMATION_MESSAGE);
        initComponents();
        setLocationRelativeTo(this);
        
        model = (DefaultTableModel)local_table.getModel();
        modelS = (DefaultTableModel)query_table.getModel();
        
        try
        {
            client.startSenderUDP(tarIP, tarPort, clientPort);
            client.startReceiverUDP(clientPort);
        }
        catch(Exception e)
        {
            System.out.println("INTERFACE - FAILED TO START CLIENT UDP");
            //JOptionPane.showMessageDialog(null,"INTERFACE - FAILED TO START CLIENT UDP","Failed Client",JOptionPane.ERROR_MESSAGE);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        local_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        local_table = new javax.swing.JTable();
        delete_file_btn = new javax.swing.JButton();
        share_file_btn = new javax.swing.JButton();
        add_file_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        query_label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        query_table = new javax.swing.JTable();
        search_btn = new javax.swing.JButton();
        download_btn = new javax.swing.JButton();
        exit_btn = new javax.swing.JButton();
        slow_mode_btn = new javax.swing.JRadioButton();
        search_txt_field = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        local_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        local_label.setText("LOCAL");

        local_table.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        local_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "File Size", "File Path"
            }
        ));
        local_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(local_table);

        delete_file_btn.setText("Delete");
        delete_file_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_file_btnActionPerformed(evt);
            }
        });

        share_file_btn.setText("Share");
        share_file_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                share_file_btnActionPerformed(evt);
            }
        });

        add_file_btn.setText("Add");
        add_file_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_file_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(local_label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(delete_file_btn)
                .addGap(75, 75, 75)
                .addComponent(share_file_btn)
                .addGap(82, 82, 82)
                .addComponent(add_file_btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(local_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_file_btn)
                    .addComponent(share_file_btn)
                    .addComponent(add_file_btn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        query_label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        query_label.setText("QUERY");

        query_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "File Size", "Host IP Address", "Host Port"
            }
        ));
        query_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(query_table);

        search_btn.setText("Search");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        download_btn.setText("Download");
        download_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                download_btnActionPerformed(evt);
            }
        });

        exit_btn.setBackground(new java.awt.Color(255, 0, 0));
        exit_btn.setForeground(new java.awt.Color(255, 255, 255));
        exit_btn.setText("Exit");
        exit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btnActionPerformed(evt);
            }
        });

        slow_mode_btn.setText("Slow Mode");
        slow_mode_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slow_mode_btnActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(51, 204, 0));
        jTextArea1.setRows(5);
        jTextArea1.setText("CLIENT - Instance created.");
        jScrollPane3.setViewportView(jTextArea1);

        jLabel1.setText(" Client Log:");

        jButton1.setText("Clear Log");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(query_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(search_txt_field)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_btn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(download_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(slow_mode_btn)
                        .addGap(18, 18, 18)
                        .addComponent(exit_btn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(query_label)
                    .addComponent(search_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(download_btn)
                    .addComponent(exit_btn)
                    .addComponent(slow_mode_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void hideWindow()
    {
        this.setVisible(false);
    }
    
    public void constructLocalString()
    {
        localFiles = "";
        for(int r=0; r < model.getRowCount(); r++)
        {
            localFiles += model.getValueAt(r,0) + "#" + model.getValueAt(r,1) + "?";
        }
    }
    
    public void updateLocalData(File mFile)
    {
        String[] tempData = {mFile.getName(), String.valueOf(mFile.length()), mFile.getAbsolutePath() };
        model.addRow(tempData);
        model.fireTableDataChanged();
        this.client.updateTableModel(model);
        
        constructLocalString();
    }
    
    public void updateResults(DefaultTableModel tbl)
    {
        updateTableModel(modelS, tbl);
        modelS.fireTableDataChanged();
    }
    
    public void updateTables()
    {
        model.fireTableDataChanged();
        modelS.fireTableDataChanged();
    }
    
    public void updateTableModel(DefaultTableModel oldT, DefaultTableModel newT)
    {
        clearTableModel(oldT);
        for(int r=0; r<newT.getRowCount(); r++)
        {
            String[] tempData = 
            {
                (newT.getValueAt(r,0).toString()),
                (newT.getValueAt(r, 1).toString()),
                (newT.getValueAt(r, 2).toString()),
                (newT.getValueAt(r,3).toString())
            };
            oldT.addRow(tempData);
        }
        oldT.fireTableDataChanged();
    }
    
    public void clearTableModel(DefaultTableModel tbl)
    {
        if(tbl.getRowCount() > 0)
        {
            for(int i= tbl.getRowCount()-1; i>-1;i--)
            {
                tbl.removeRow(i);
            }
        }
    }
    
    public String[][] getLocalTableModel()
    {
        model.fireTableDataChanged();
        String[][] temp = new String[model.getRowCount()][3];
        for(int r=0;r<model.getRowCount();r++)
        {
            temp[r][0] = model.getValueAt(r, 0).toString();
            temp[r][1] = model.getValueAt(r, 1).toString();
            temp[r][2] = model.getValueAt(r, 2).toString();
        }
        return temp;
    }
    
    private void share_file_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_share_file_btnActionPerformed
        if(local_table.getRowCount() == 0)
        {
            //System.out.println("INTERFACE - SELECT FILE TO SHARE [CLIENT]");
            jTextArea1.append("INTERFACE - SELECT FILE TO SHARE [CLIENT]\n");
        }
        else
        {
            try
            {
                client.informAndUpdate(localFiles);
            }
            catch(Exception es)
            {
                //System.out.println("INTERFACE - ERROR: Could not inform and update [CLIENT]");
                jTextArea1.append("INTERFACE - ERROR: Could not inform and update [CLIENT]\n");
            }
        }
    }//GEN-LAST:event_share_file_btnActionPerformed

    private void delete_file_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_file_btnActionPerformed
        int row = local_table.getSelectedRow();
        if(row == -1)
        {
           // System.out.println("INTERFACE - ERROR: Select file to remove [CLIENT]");
           jTextArea1.append("INTERFACE - ERROR: Select file to remove [CLIENT]\n");
        }
        else
        {
            model.removeRow(row);
            model.fireTableDataChanged();
            constructLocalString();
        }
    }//GEN-LAST:event_delete_file_btnActionPerformed

    private void add_file_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_file_btnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.showOpenDialog(null);
        
        File[] files = chooser.getSelectedFiles();
        
        for(File mFile: files)
        {
            updateLocalData(mFile);
        }
    }//GEN-LAST:event_add_file_btnActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        String key = search_txt_field.getText();
        if(key.isEmpty())
        {
            //System.out.println("INTERFACE - Search Field Empty [CLIENT]");
            jTextArea1.append("INTERFACE - Search Field Empty [CLIENT]\n");
        }
        else
        {
            try
            {
                client.search(key);
                jTextArea1.append("INTERFACE - Searching for: " + key + " [CLIENT]\n");
            }
            catch(Exception es)
            {
                jTextArea1.append("INTERFACE - ERROR: Search failed. [CLIENT]\n");
            }
        }
    }//GEN-LAST:event_search_btnActionPerformed

    private void exit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
        //int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Are you sure you want to exit client?","Client Warning",JOptionPane.YES_NO_OPTION);
        try
        {
            if(dialogResult == JOptionPane.YES_OPTION){
            client.exit();
            }
        }
        catch(Exception ee)
        {
            jTextArea1.append("INTERFACE - ERROR: Failed to Exit [CLIENT]\n");
        }
    }//GEN-LAST:event_exit_btnActionPerformed

    private void download_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_download_btnActionPerformed
        int row = query_table.getSelectedRow();
        if(row ==  -1)
        {
           jTextArea1.append("INTERFACE - ERROR: File not selected [CLIENT]\n");
        }
        else
        {
            String fileName = modelS.getValueAt(row, 0).toString();
            String fileSize = modelS.getValueAt(row, 1).toString();
            String request = fileName + "#" + fileSize;
            
            try
            {
                client.download(request);
                jTextArea1.append("INTERFACE - Downloading: " + fileName + " of size: " + fileSize + " bytes [CLIENT]\n");
                JOptionPane.showMessageDialog(null,"File downloaded","Downloaded ..",JOptionPane.INFORMATION_MESSAGE);
            }
            catch(Exception ed)
            {
                jTextArea1.append("INTERFACE - ERROR: Download Request failed. [CLIENT]\n");
            }
        }
    }//GEN-LAST:event_download_btnActionPerformed

    private void slow_mode_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slow_mode_btnActionPerformed
        if(slow_mode_btn.isSelected() )
        {
            client.slowMode(true);
        }
        else
        {
            client.slowMode(false);
        }
    }//GEN-LAST:event_slow_mode_btnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    // GETTER
    public JTable getSearchTable()
    {
        return query_table;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new ClientMenu("", "", "").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_file_btn;
    private javax.swing.JButton delete_file_btn;
    private javax.swing.JButton download_btn;
    private javax.swing.JButton exit_btn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel local_label;
    private javax.swing.JTable local_table;
    private javax.swing.JLabel query_label;
    private javax.swing.JTable query_table;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField search_txt_field;
    private javax.swing.JButton share_file_btn;
    private javax.swing.JRadioButton slow_mode_btn;
    // End of variables declaration//GEN-END:variables
}
